model:
  # arch: blip2
  load_finetuned: false
  model_type: blip2_pretrain_qformer  # <- your custom model file (e.g., blip2_qformer_w.py)
  load_pretrained: False
  freeze_vit: True
  vit_model: eva_clip_g
  vit_precision: fp16
  image_size: 224
  max_txt_len: 32
  use_grad_checkpoint: True
  num_query_token: 32


# Custom Waymo dataset config
datasets:
  waymo:
    data_type: [camera, lidar]
    vis_processor:
      train:
        name: "blip2_image_train"
        image_size: 224
    text_processor:
      train:
        name: "blip_caption"
    build_info:
      annotations:
        camera:
          train:
            storage: lavis/my_datasets/waymo/waymo_camera_annotations_train.json
          val:
            storage: lavis/my_datasets/waymo/waymo_camera_annotations_val.json
          test:
            storage: lavis/my_datasets/waymo/waymo_camera_annotations_test.json
        lidar:
          train:
            storage: lavis/my_datasets/waymo/waymo_lidar_annotations_train.json
          val:
            storage: lavis/my_datasets/waymo/waymo_lidar_annotations_val.json
          test:
            storage: lavis/my_datasets/waymo/waymo_lidar_annotations_test.json

      camera:
        train:
          storage: lavis/my_datasets/waymo/train/camera_image
        val:
          storage: lavis/my_datasets/waymo/validation/camera_image
        test:
          storage: lavis/my_datasets/waymo/test/camera_image

      lidar:
        train:
          storage: lavis/my_datasets/waymo/train/lidar
        val:
          storage: lavis/my_datasets/waymo/validation/lidar
        test:
          storage: lavis/my_datasets/waymo/test/lidar





run:
  task: waymo_captioning  # <- custom task if you register it
  lr_sched: "linear_warmup_cosine_lr"
  init_lr: 1e-4
  min_lr: 1e-5
  warmup_lr: 1e-6
  weight_decay: 0.05
  max_epoch: 1000 # 20
  save_every_n_steps: 5 #1 #2 # number of epochs
  batch_size_train: 64 # 2 # 16
  batch_size_eval: 32 #1 #16 #64
  num_workers: 4
  warmup_steps: 20 #5
  seed: 42
  output_dir: "output/BLIP2/qformer_scratch_waymo_full"
  amp:  true
  resume_ckpt_path: null
  evaluate: false
  train_splits: ["train"]
  valid_splits: ["val"]     
  test_splits: ["test"]     
  device: "cuda"
  world_size: 1 # 2 number of gpu used 
  dist_url: "env://"
  distributed: false # true






















# model:
#   # arch: blip2
#   load_finetuned: false
#   model_type: blip2_pretrain_qformer  # <- your custom model file (e.g., blip2_qformer_w.py)
#   load_pretrained: False
#   freeze_vit: True
#   vit_model: eva_clip_g
#   vit_precision: fp16
#   image_size: 224
#   max_txt_len: 32
#   use_grad_checkpoint: True
#   num_query_token: 32


# # Custom Waymo dataset config
# datasets:
#   waymo:
#     data_type: [camera, lidar]
#     vis_processor:
#       train:
#         name: "blip2_image_train"
#         image_size: 224
#     text_processor:
#       train:
#         name: "blip_caption"
#     build_info:
#       annotations:
#         camera:
#           train:
#             storage: lavis/my_datasets/waymo/waymo_camera_annotations.json
#         lidar:
#           train:
#             storage: lavis/my_datasets/waymo/waymo_lidar_annotations.json
#       camera:
#         storage: lavis/my_datasets/waymo/train/camera_image
#       lidar:
#         storage: lavis/my_datasets/waymo/train/lidar

# run:
#   task: waymo_captioning  # <- custom task if you register it
#   lr_sched: "linear_warmup_cosine_lr"
#   init_lr: 1e-4
#   min_lr: 1e-5
#   warmup_lr: 1e-6
#   weight_decay: 0.05
#   max_epoch: 20
#   save_every_n_steps: 5 #1 #2 # number of epochs
#   batch_size_train: 16
#   batch_size_eval: 16 #64
#   num_workers: 4
#   warmup_steps: 5
#   seed: 42
#   output_dir: "output/BLIP2/qformer_scratch_waymo_full"
#   amp: true
#   resume_ckpt_path: null
#   evaluate: false
#   train_splits: ["train"]
#   valid_splits: ["val"]     
#   test_splits: ["test"]     
#   device: "cuda"
#   world_size: 1 # 2 number of gpu used 
#   dist_url: "env://"
#   distributed: false # true
